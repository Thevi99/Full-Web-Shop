import connectDB from "../../../src/lib/mongo";
import ExploitorStatus from "../../../src/models/exploitorstatusModel";

export default async function handler(req, res) {
  if (req.method === "POST") {
    await connectDB();
    const { name } = req.body;
    if (!name) {
      return res.status(400).json({ message: "กรุณากรอกคำถามและคำตอบ" });
    }
    try {
      const newData = new ExploitorStatus({
        name,
      });
      await newData.save();
      return res.status(201).json({
        message: "successfully",
      });
      //   const items = await FAQ.find(); // ดึงข้อมูลสินค้าทั้งหมดจาก MongoDB
      //   res.status(200).json({ items });
    } catch (error) {
      console.error("Error fetching items:", error);
      res.status(500).json({ message: "Internal server error" });
    }
  } else if (req.method === "GET") {
    await connectDB();
    const DataTarget = await ExploitorStatus.find();
    return res.status(200).json({ DataTarget });
  } else if (req.method === "PUT") {
    await connectDB();
    const { id } = req.query;
    const { name } = req.body;
    try {
      const updatedData = await ExploitorStatus.findByIdAndUpdate(
        id,
        { name },
        { new: true }
      );
      return res.status(200).json({ updatedData });
    } catch (error) {
      return res.status(500).json({ message: "Internal server error" });
    }
  } else if (req.method === "DELETE") {
    await connectDB();
    const { id } = req.query;
    try {
      await ExploitorStatus.findByIdAndDelete(id);
      return res.status(200).json({ message: "Deleted successfully" });
    } catch (error) {
      return res.status(500).json({ message: "Internal server error" });
    }
  } else {
    res.status(405).json({ message: "Method not allowed" });
  }
}
